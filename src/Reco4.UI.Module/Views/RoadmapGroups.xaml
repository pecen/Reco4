<UserControl
  x:Class="Reco4.UI.Module.Views.RoadmapGroups"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:attachedReco4="clr-namespace:Reco4.Common.Controls.AttachedProperties;assembly=Reco4.Common"
  xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:commandsReco4="clr-namespace:Reco4.Common.Commands;assembly=Reco4.Common"
  xmlns:commonIcons="clr-namespace:Reco4.Common.Icons;assembly=Reco4.Common"
  xmlns:converters="clr-namespace:Reco4.UI.Module.Converters"
  xmlns:enums="clr-namespace:Reco4.UI.Module.Enums"
  xmlns:frameworkControls="clr-namespace:Reco4.Utilities.UI.Controls;assembly=Reco4.Utilities"
  xmlns:localBehaviors="clr-namespace:Reco4.UI.Module.Behaviors"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:properties="clr-namespace:Reco4.UI.Module.Properties"
  xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
  prism:ViewModelLocator.AutoWireViewModel="True">
  <UserControl.Resources>
    <ResourceDictionary>
      <!--<ResourceDictionary.MergedDictionaries>
        <frameworkControls:SharedResourceDictionary SharedSource="/Reco4.Utilities;component/UI/Resources/Styles/CommonStyles.xaml" />
      </ResourceDictionary.MergedDictionaries>-->
      <converters:StatusIntToStringConverter x:Key="StatusIntToStringConverter" />
      <converters:SelectedRoadmapGroupFilteringToVisibilityConverter x:Key="SelectedFilteringToVisibilityConverter" />
      <!--<Style x:Key="HeaderTextStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="TextWrapping" Value="Wrap" />
      <Setter Property="TextAlignment" Value="Center" />
    </Style>-->
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid Margin="10">

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <StackPanel Orientation="Horizontal">
        <Button
          Grid.Column="0"
          Width="78"
          Margin="0,2,0,2"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          Command="{Binding DeleteRoadmapGroupsCommand}"
          Content="Delete"
          ToolTip="{Binding DeleteInfo}" />
        <Separator Margin="6,2,6,2" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
      </StackPanel>
      <Label
        Grid.Column="1"
        Margin="0,2,0,2"
        Content="Search Roadmap Groups:" />
      <ComboBox
        x:Name="ColumnNames"
        Grid.Column="1"
        Margin="0,2,5,2"
        ItemsSource="{Binding Columns}"
        SelectedIndex="{Binding SelectedColumn}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="SelectionChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </ComboBox>
      <TextBox
        Grid.Column="2"
        Margin="0,2,0,2"
        VerticalContentAlignment="Center"
        Background="White"
        Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
        ToolTip="{Binding SearchTextInfo}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="TextChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </TextBox>
      <ComboBox
        Grid.Column="2"
        Margin="0,2,0,2"
        ItemsSource="{Binding ValidationStatusList}"
        SelectedIndex="{Binding SelectedValidationStatus}"
        Visibility="{Binding SelectedColumn, Converter={StaticResource SelectedFilteringToVisibilityConverter}, ConverterParameter={x:Static enums:FilterableRoadmapGroupColumns.ValidationStatus}}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="SelectionChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </ComboBox>
      <ComboBox
        Grid.Column="2"
        Margin="0,2,0,2"
        ItemsSource="{Binding ConvertToVehicleStatusList}"
        SelectedIndex="{Binding SelectedConvertToVehicleStatus}"
        Visibility="{Binding SelectedColumn, Converter={StaticResource SelectedFilteringToVisibilityConverter}, ConverterParameter={x:Static enums:FilterableRoadmapGroupColumns.ConvertToVehicleStatus}}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="SelectionChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </ComboBox>
      <StackPanel
        Grid.Column="3"
        HorizontalAlignment="Right"
        Orientation="Horizontal">
        <Label HorizontalAlignment="Right" Content="Count:" />
        <Label Content="{Binding RoadmapGroups.Count}" />
      </StackPanel>
    </Grid>

    <!--<DataGrid
      x:Name="roadmapGroupGrid"
      Grid.Row="1"
      AutoGenerateColumns="False"
      CanUserAddRows="False"
      HorizontalScrollBarVisibility="Auto"
      ItemsSource="{Binding RoadmapGroups, UpdateSourceTrigger=PropertyChanged}">

      <DataGrid.Columns>
        <DataGridCheckBoxColumn Binding="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}">
          <DataGridCheckBoxColumn.HeaderTemplate>
            <DataTemplate>
              <CheckBox IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:RoadmapGroups}, Path=DataContext.AllSelected}">Select All</CheckBox>
            </DataTemplate>
          </DataGridCheckBoxColumn.HeaderTemplate>
        </DataGridCheckBoxColumn>
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.RoadmapGroupId}" Header="Roadmap Group Id" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.OwnerSss}" Header="Owner SSS" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.RoadmapName}" Header="Roadmap Name" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.Protected}" Header="Protected" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.CreationTime}" Header="Creation Time" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.ValidationStatus, Converter={StaticResource StatusIntToStringConverter}, ConverterParameter={x:Type enums:ValidationStatus}}" Header="Validation Status" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.ConvertToVehicleInputStatus, Converter={StaticResource StatusIntToStringConverter}, ConverterParameter={x:Type enums:ConvertToVehicleStatus}}" Header="Convert to Vehicle Status" />
    -->
    <!--<DataGridTextColumn
                    Width="200"
                    Binding="{Binding Xml}"
                    Header="Xml" />-->
    <!--
      </DataGrid.Columns>
    </DataGrid>-->

    <telerik:RadGridView
      x:Name="radRoadmapGroupGrid"
      Grid.Row="1"
      attachedReco4:RadGridViewCopyOptions.Command="{x:Static commandsReco4:GridCommands.CopySelectedGridRowsCommand}"
      AutoGenerateColumns="False"
      CanUserInsertRows="False"
      GroupRenderMode="Flat"
      IsSynchronizedWithCurrentItem="False"
      ItemsSource="{Binding RoadmapGroups, UpdateSourceTrigger=PropertyChanged}"
      SelectionMode="Extended">

      <!--<telerik:RadGridView
      x:Name="radRoadmapGroupGrid"
      Grid.Row="1"
      AutoGenerateColumns="False"
      CanUserInsertRows="False"
      GroupRenderMode="Flat"
      IsSynchronizedWithCurrentItem="False"
      ItemsSource="{Binding RoadmapGroups, UpdateSourceTrigger=PropertyChanged}"
      SelectionMode="Extended">-->

      <telerik:RadContextMenu.ContextMenu>
        <telerik:RadContextMenu x:Name="radContextMenu">
          <telerik:RadMenuItem Header="{x:Static properties:RoadmapGroups.Copy}">
            <!--<telerik:RadMenuItem.Icon>
              <frameworkControls:IconDisplayer HorizontalAlignment="Center" Icon="{x:Static commonIcons:StandardIcons.Copy}" />
            </telerik:RadMenuItem.Icon>-->
            <telerik:RadMenuItem Command="{x:Static commandsReco4:GridCommands.CopySelectedRowsCommand}" Header="{x:Static properties:RoadmapGroups.SelectedRowOpenBracketCloseBracket}">
              <behaviors:Interaction.Behaviors>
                <localBehaviors:SetSelectedRowsToCommandParameterBehavior />
              </behaviors:Interaction.Behaviors>
            </telerik:RadMenuItem>
            <telerik:RadMenuItem Command="{x:Static commandsReco4:StandardCommands.CopyToClipboardCommand}" Header="{x:Static properties:RoadmapGroups.CellText}">
              <behaviors:Interaction.Behaviors>
                <localBehaviors:SetCellValueToCommandParameterBehavior />
              </behaviors:Interaction.Behaviors>
            </telerik:RadMenuItem>
          </telerik:RadMenuItem>
        </telerik:RadContextMenu>
      </telerik:RadContextMenu.ContextMenu>

      <telerik:RadGridView.Columns>
        <telerik:GridViewSelectColumn />
        <telerik:GridViewDataColumn
          DataMemberBinding="{Binding RoadmapGroupInfo.RoadmapGroupId}"
          IsFilteringDeferred="True"
          IsReadOnly="True"
          ShowFieldFilters="False"
          UniqueName="RoadmapGroupId">
          <telerik:GridViewDataColumn.Header>
            <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.RoadmapGroupId}" />
          </telerik:GridViewDataColumn.Header>
        </telerik:GridViewDataColumn>
        <telerik:GridViewDataColumn
          DataMemberBinding="{Binding RoadmapGroupInfo.OwnerSSS}"
          IsFilteringDeferred="True"
          IsReadOnly="True"
          ShowFieldFilters="False"
          UniqueName="OwnerSSS">
          <telerik:GridViewDataColumn.Header>
            <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.OwnerSSS}" />
          </telerik:GridViewDataColumn.Header>
        </telerik:GridViewDataColumn>
        <telerik:GridViewDataColumn
          DataMemberBinding="{Binding RoadmapGroupInfo.RoadmapName}"
          IsFilteringDeferred="True"
          IsReadOnly="True"
          ShowFieldFilters="False"
          UniqueName="RoadmapName">
          <telerik:GridViewDataColumn.Header>
            <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.RoadmapName}" />
          </telerik:GridViewDataColumn.Header>
        </telerik:GridViewDataColumn>
        <telerik:GridViewDataColumn
          DataMemberBinding="{Binding RoadmapGroupInfo.Protected}"
          IsFilteringDeferred="True"
          IsReadOnly="True"
          ShowFieldFilters="False"
          UniqueName="Protected">
          <telerik:GridViewDataColumn.Header>
            <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.Protected}" />
          </telerik:GridViewDataColumn.Header>
        </telerik:GridViewDataColumn>
        <telerik:GridViewDataColumn
          DataMemberBinding="{Binding RoadmapGroupInfo.CreationTime}"
          IsFilteringDeferred="True"
          IsReadOnly="True"
          ShowFieldFilters="False"
          UniqueName="CreationTime">
          <telerik:GridViewDataColumn.Header>
            <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.CreationTime}" />
          </telerik:GridViewDataColumn.Header>
        </telerik:GridViewDataColumn>
        <telerik:GridViewDataColumn
          DataMemberBinding="{Binding RoadmapGroupInfo.ValidationStatus, Converter={StaticResource StatusIntToStringConverter}, ConverterParameter={x:Type enums:ValidationStatus}}"
          IsFilteringDeferred="True"
          IsReadOnly="True"
          ShowFieldFilters="False"
          UniqueName="ValidationStatus">
          <telerik:GridViewDataColumn.Header>
            <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.ValidationStatus}" />
          </telerik:GridViewDataColumn.Header>
        </telerik:GridViewDataColumn>
        <telerik:GridViewDataColumn
          DataMemberBinding="{Binding RoadmapGroupInfo.ConvertToVehicleInputStatus, Converter={StaticResource StatusIntToStringConverter}, ConverterParameter={x:Type enums:ConvertToVehicleStatus}}"
          IsFilteringDeferred="True"
          IsReadOnly="True"
          ShowFieldFilters="False"
          UniqueName="ConvertToVehicleInputStatus">
          <telerik:GridViewDataColumn.Header>
            <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.ConvertToVehicleInputStatus}" />
          </telerik:GridViewDataColumn.Header>
        </telerik:GridViewDataColumn>
        <!--<telerik:GridViewDataColumn
                    DataMemberBinding="{Binding RoadmapGroupInfo.Xml}"
                    IsFilteringDeferred="True"
                    IsReadOnly="True"
                    ShowFieldFilters="False"
                    UniqueName="Xml">
                    <telerik:GridViewDataColumn.Header>
                        <TextBlock Style="{StaticResource HeaderTextStyle}" Text="{x:Static properties:RoadmapGroups.Xml}" />
                    </telerik:GridViewDataColumn.Header>
                </telerik:GridViewDataColumn>-->
      </telerik:RadGridView.Columns>
    </telerik:RadGridView>

    <!--<DataGrid
      x:Name="roadmapGroupGrid"
      Grid.Row="1"
      AutoGenerateColumns="False"
      CanUserAddRows="False"
      HorizontalScrollBarVisibility="Auto"
      ItemsSource="{Binding RoadmapGroups, UpdateSourceTrigger=PropertyChanged}">

      <DataGrid.Columns>
        <DataGridCheckBoxColumn Binding="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}">
          <DataGridCheckBoxColumn.HeaderTemplate>
            <DataTemplate>
              <CheckBox IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:RoadmapGroups}, Path=DataContext.AllSelected}">Select All</CheckBox>
            </DataTemplate>
          </DataGridCheckBoxColumn.HeaderTemplate>
        </DataGridCheckBoxColumn>
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.RoadmapGroupId}" Header="Roadmap Group Id" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.OwnerSss}" Header="Owner SSS" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.RoadmapName}" Header="Roadmap Name" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.Protected}" Header="Protected" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.CreationTime}" Header="Creation Time" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.ValidationStatus, Converter={StaticResource StatusIntToStringConverter}, ConverterParameter={x:Type enums:ValidationStatus}}" Header="Validation Status" />
        <DataGridTextColumn Binding="{Binding RoadmapGroupInfo.ConvertToVehicleInputStatus, Converter={StaticResource StatusIntToStringConverter}, ConverterParameter={x:Type enums:ConvertToVehicleStatus}}" Header="Convert to Vehicle Status" />
    -->
    <!--<DataGridTextColumn
                    Width="200"
                    Binding="{Binding Xml}"
                    Header="Xml" />-->
    <!--
      </DataGrid.Columns>
    </DataGrid>-->

  </Grid>
</UserControl>
