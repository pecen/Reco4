Reco3
Steg som sker när man klickar på "Upload"

- GetContext()
- GetRoadmapGroup(baserat på RoadmapGroupId)
- Om RoadmapGroup:en inte är null så
	- Om RoadmapGroup.Protected = sant
		- avbryt, och returnera en Json med {success = false, message = "Roadmap is locked for further changes. Action is aborted."
	- Om Request.Files.Count > 0 så
		- Ta fram Filedrop path:en
		- Om Filedrop path:ens längd <= 0
			- avbryt, och returnera en Json med {success = false, message = "Server-error, filedrop-area is missing (Virtual folder). Action is aborted."
		- loopa igenom Request.Files.Count (men det ska bara vara 1 fil, så jag förstår inte varför man ska loopa)
			- Skapa path, dvs Filedrop path:en ovan + filnamn
			- Spara xml-filen i path
			- Skapa FileStream med path
			- Läs in FileStream i en StreamReader
			- Läs in StreamReader till en contentsträng
			- Sätt RoadmapGroup.ValidationStatus till ValidationStatus.Processing
			- Sätt RoadmapGroup.XML = contentsträng
			- Spara DataContext till databasen
			- Sätt RoadmapGroup.XMLSchemaFilename
			- Validera Xml-filen antingen i kod, eller med Xsd 
				- Om i kod: Skapa ett VehicleConverter-objekt 
				- Skapa en XmlReader
				- Deserialisera Xml:en till ett Vehicle-objekt
				- Om allt gick bra i deserialiseringen:
					- Skapa ett nytt DatabaseContext-objekt
					- Sätt Converter.DbContext till detta nya object
					- Validera alla PDs och returnera om det gick bra eller ej. 
			- Om valideringen inte gick igenom
				- Sätt RoadmapGroup.ValidationStatus till ValidationStatus.ValidatedWithFailures
				- Spara DataContext till databasen
				- Returnera en Json med {succe = false, message = "Failed to save roadmap. Internal error while validating the baseline using: " + Roadmap.XMLSchemaFilename + "."
			- Sätt RoadmapGroup.ValidationStatus till ValidatedWithSuccess
			- Spara DataContext till databasen